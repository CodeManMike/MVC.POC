@{
    ViewData["Title"] = "Products Management";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="bi bi-box"></i> Products Management</h2>
    <a asp-action="Create" class="btn btn-primary">
        <i class="bi bi-plus-circle"></i> Add New Product
    </a>
</div>

<div class="row mb-3">
    <div class="col-md-6">
        <div class="input-group">
            <span class="input-group-text">
                <i class="bi bi-search"></i>
            </span>
            <input type="text" id="searchInput" class="form-control" placeholder="Search products...">
        </div>
    </div>
    <div class="col-md-3">
        <select id="categoryFilter" class="form-select">
            <option value="">All Categories</option>
        </select>
    </div>
    <div class="col-md-3">
        <button id="lowStockBtn" class="btn btn-warning">
            <i class="bi bi-exclamation-triangle"></i> Low Stock
        </button>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h5 class="card-title mb-0">
            <i class="bi bi-table"></i> Product Catalog
            <span id="productCount" class="badge bg-secondary ms-2">0</span>
        </h5>
    </div>
    <div class="card-body">
        <div id="loadingSpinner" class="text-center d-none">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>

        <div class="table-responsive">
            <table id="productsTable" class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Category</th>
                        <th>Price</th>
                        <th>Stock</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Products will be loaded here via JavaScript -->
                </tbody>
            </table>
        </div>

        <div id="emptyState" class="text-center py-5 d-none">
            <i class="bi bi-box-seam display-1 text-muted"></i>
            <h4 class="text-muted">No products found</h4>
            <p class="text-muted">Start by adding your first product to the catalog.</p>
            <a asp-action="Create" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> Add First Product
            </a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let allProducts = [];
        let filteredProducts = [];

        $(document).ready(function() {
            loadProducts();
            setupEventHandlers();
        });

        function setupEventHandlers() {
            $('#searchInput').on('input', function() {
                filterProducts();
            });

            $('#categoryFilter').on('change', function() {
                filterProducts();
            });

            $('#lowStockBtn').on('click', function() {
                loadLowStockProducts();
            });
        }

        function loadProducts() {
            showLoading(true);

            $.get('/api/products')
                .done(function(response) {
                    if (response.success) {
                        allProducts = response.data;
                        filteredProducts = allProducts;
                        populateCategories();
                        displayProducts();
                        updateProductCount();
                    } else {
                        showError('Failed to load products: ' + response.message);
                    }
                })
                .fail(function() {
                    showError('Failed to connect to the API');
                })
                .always(function() {
                    showLoading(false);
                });
        }

        function loadLowStockProducts() {
            showLoading(true);

            $.get('/api/products/low-stock?threshold=10')
                .done(function(response) {
                    if (response.success) {
                        filteredProducts = response.data;
                        displayProducts();
                        updateProductCount();
                        $('#searchInput').val('');
                        $('#categoryFilter').val('');
                    }
                })
                .fail(function() {
                    showError('Failed to load low stock products');
                })
                .always(function() {
                    showLoading(false);
                });
        }

        function populateCategories() {
            const categories = [...new Set(allProducts.map(p => p.category))];
            const categorySelect = $('#categoryFilter');

            categories.forEach(category => {
                categorySelect.append(`<option value="${category}">${category}</option>`);
            });
        }

        function filterProducts() {
            const searchTerm = $('#searchInput').val().toLowerCase();
            const selectedCategory = $('#categoryFilter').val();

            filteredProducts = allProducts.filter(product => {
                const matchesSearch = product.name.toLowerCase().includes(searchTerm) ||
                                    (product.description && product.description.toLowerCase().includes(searchTerm));
                const matchesCategory = !selectedCategory || product.category === selectedCategory;

                return matchesSearch && matchesCategory;
            });

            displayProducts();
            updateProductCount();
        }

        function displayProducts() {
            const tbody = $('#productsTable tbody');
            tbody.empty();

            if (filteredProducts.length === 0) {
                $('#productsTable').addClass('d-none');
                $('#emptyState').removeClass('d-none');
                return;
            }

            $('#productsTable').removeClass('d-none');
            $('#emptyState').addClass('d-none');

            filteredProducts.forEach(product => {
                const row = `
                    <tr>
                        <td>${product.id}</td>
                        <td>
                            <strong>${product.name}</strong>
                            ${product.description ? `<br><small class="text-muted">${product.description}</small>` : ''}
                        </td>
                        <td><span class="badge bg-info">${product.category}</span></td>
                        <td>$${product.price.toFixed(2)}</td>
                        <td>
                            <span class="badge ${product.stockQuantity < 10 ? 'bg-warning' : 'bg-success'}">
                                ${product.stockQuantity}
                            </span>
                        </td>
                        <td>
                            ${product.isActive ?
                                '<span class="badge bg-success">Active</span>' :
                                '<span class="badge bg-danger">Inactive</span>'
                            }
                        </td>
                        <td>
                            <div class="btn-group btn-group-sm">
                                <a href="/ProductsWeb/Details/${product.id}" class="btn btn-outline-info" title="View Details">
                                    <i class="bi bi-eye"></i>
                                </a>
                                <a href="/ProductsWeb/Edit/${product.id}" class="btn btn-outline-primary" title="Edit">
                                    <i class="bi bi-pencil"></i>
                                </a>
                                <button onclick="deleteProduct(${product.id})" class="btn btn-outline-danger" title="Delete">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                `;
                tbody.append(row);
            });
        }

        function deleteProduct(productId) {
            if (confirm('Are you sure you want to delete this product?')) {
                $.ajax({
                    url: `/api/products/${productId}`,
                    method: 'DELETE',
                    success: function(response) {
                        if (response.success) {
                            showSuccess('Product deleted successfully');
                            loadProducts();
                        } else {
                            showError('Failed to delete product: ' + response.message);
                        }
                    },
                    error: function() {
                        showError('Failed to delete product');
                    }
                });
            }
        }

        function updateProductCount() {
            $('#productCount').text(filteredProducts.length);
        }

        function showLoading(show) {
            if (show) {
                $('#loadingSpinner').removeClass('d-none');
                $('#productsTable').addClass('d-none');
                $('#emptyState').addClass('d-none');
            } else {
                $('#loadingSpinner').addClass('d-none');
            }
        }

        function showSuccess(message) {
            showAlert(message, 'success');
        }

        function showError(message) {
            showAlert(message, 'danger');
        }

        function showAlert(message, type) {
            const alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;

            // Insert alert at the top of the page
            $('main').prepend(alertHtml);

            // Auto-dismiss after 5 seconds
            setTimeout(function() {
                $('.alert').alert('close');
            }, 5000);
        }
    </script>
}
