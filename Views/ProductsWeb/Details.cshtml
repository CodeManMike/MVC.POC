@{
    ViewData["Title"] = "Product Details";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="bi bi-eye"></i> Product Details</h2>
    <div>
        <a asp-action="Edit" asp-route-id="@ViewBag.ProductId" class="btn btn-primary">
            <i class="bi bi-pencil"></i> Edit Product
        </a>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="bi bi-arrow-left"></i> Back to Products
        </a>
    </div>
</div>

<div id="loadingSpinner" class="text-center">
    <div class="spinner-border" role="status">
        <span class="visually-hidden">Loading product...</span>
    </div>
    <p class="mt-2">Loading product details...</p>
</div>

<div id="productDetails" class="d-none">
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-box"></i> <span id="productName">Product Information</span>
                        <span id="statusBadge" class="badge ms-2">Active</span>
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label text-muted">Product ID</label>
                                <div class="fw-bold" id="productId">-</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label text-muted">Category</label>
                                <div><span id="categoryBadge" class="badge bg-info">-</span></div>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label text-muted">Description</label>
                        <div id="productDescription" class="border rounded p-2 bg-light">-</div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label text-muted">Price</label>
                                <div class="fs-4 fw-bold text-success" id="productPrice">$0.00</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label text-muted">Stock Quantity</label>
                                <div>
                                    <span id="stockBadge" class="badge fs-6">0</span>
                                    <span id="stockStatus" class="ms-2 small text-muted"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card mt-3">
                <div class="card-header">
                    <h6 class="card-title mb-0">
                        <i class="bi bi-gear"></i> Actions
                    </h6>
                </div>
                <div class="card-body">
                    <div class="d-flex gap-2 flex-wrap">
                        <a asp-action="Edit" asp-route-id="@ViewBag.ProductId" class="btn btn-primary">
                            <i class="bi bi-pencil"></i> Edit Product
                        </a>
                        <button id="deleteBtn" class="btn btn-outline-danger">
                            <i class="bi bi-trash"></i> Delete Product
                        </button>
                        <button id="toggleStatusBtn" class="btn btn-outline-warning">
                            <i class="bi bi-toggle-off"></i> <span id="toggleText">Deactivate</span>
                        </button>
                        <a asp-action="Create" class="btn btn-outline-success">
                            <i class="bi bi-plus-circle"></i> Add New Product
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h6 class="card-title mb-0">
                        <i class="bi bi-clock-history"></i> Product History
                    </h6>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <small class="text-muted">Created:</small>
                        <div id="createdAt" class="fw-bold">-</div>
                    </div>
                    <div class="mb-3">
                        <small class="text-muted">Last Updated:</small>
                        <div id="updatedAt" class="fw-bold">-</div>
                    </div>
                </div>
            </div>

            <div class="card mt-3">
                <div class="card-header">
                    <h6 class="card-title mb-0">
                        <i class="bi bi-graph-up"></i> Quick Stats
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-6">
                            <div class="border rounded p-2">
                                <div class="text-muted small">Status</div>
                                <div id="statusText" class="fw-bold">Active</div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="border rounded p-2">
                                <div class="text-muted small">Stock Level</div>
                                <div id="stockLevel" class="fw-bold">Normal</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card mt-3">
                <div class="card-header">
                    <h6 class="card-title mb-0">
                        <i class="bi bi-lightbulb"></i> Quick Actions
                    </h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <button class="btn btn-outline-primary btn-sm" onclick="copyProductInfo()">
                            <i class="bi bi-clipboard"></i> Copy Product Info
                        </button>
                        <button class="btn btn-outline-info btn-sm" onclick="shareProduct()">
                            <i class="bi bi-share"></i> Share Product
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="errorState" class="text-center py-5 d-none">
    <i class="bi bi-exclamation-triangle display-1 text-danger"></i>
    <h4 class="text-danger">Product Not Found</h4>
    <p class="text-muted">The product you're looking for doesn't exist or has been deleted.</p>
    <a asp-action="Index" class="btn btn-primary">
        <i class="bi bi-arrow-left"></i> Back to Products
    </a>
</div>

@section Scripts {
    <script>
        let currentProduct = {};

        $(document).ready(function() {
            loadProduct();
        });

        function loadProduct() {
            const productId = @ViewBag.ProductId;

            $.get(`/api/products/${productId}`)
                .done(function(response) {
                    if (response.success) {
                        currentProduct = response.data;
                        displayProduct(currentProduct);
                        setupEventHandlers();

                        $('#loadingSpinner').addClass('d-none');
                        $('#productDetails').removeClass('d-none');
                    } else {
                        showErrorState();
                    }
                })
                .fail(function() {
                    showErrorState();
                });
        }

        function showErrorState() {
            $('#loadingSpinner').addClass('d-none');
            $('#errorState').removeClass('d-none');
        }

        function displayProduct(product) {
            // Basic information
            $('#productName').text(product.name);
            $('#productId').text(product.id);
            $('#productDescription').text(product.description || 'No description available');
            $('#productPrice').text(`$${product.price.toFixed(2)}`);

            // Category
            $('#categoryBadge').text(product.category);

            // Status
            const statusBadge = $('#statusBadge');
            const statusText = $('#statusText');
            if (product.isActive) {
                statusBadge.removeClass('bg-danger').addClass('bg-success').text('Active');
                statusText.text('Active');
                $('#toggleText').text('Deactivate');
                $('#toggleStatusBtn i').removeClass('bi-toggle-on').addClass('bi-toggle-off');
            } else {
                statusBadge.removeClass('bg-success').addClass('bg-danger').text('Inactive');
                statusText.text('Inactive');
                $('#toggleText').text('Activate');
                $('#toggleStatusBtn i').removeClass('bi-toggle-off').addClass('bi-toggle-on');
            }

            // Stock
            const stockBadge = $('#stockBadge');
            const stockLevel = $('#stockLevel');
            const stockStatus = $('#stockStatus');

            stockBadge.text(product.stockQuantity);

            if (product.stockQuantity === 0) {
                stockBadge.removeClass('bg-success bg-warning').addClass('bg-danger');
                stockLevel.text('Out of Stock');
                stockStatus.text('(Needs restocking)');
            } else if (product.stockQuantity < 10) {
                stockBadge.removeClass('bg-success bg-danger').addClass('bg-warning');
                stockLevel.text('Low Stock');
                stockStatus.text('(Consider restocking)');
            } else {
                stockBadge.removeClass('bg-warning bg-danger').addClass('bg-success');
                stockLevel.text('Good Stock');
                stockStatus.text('(Well stocked)');
            }

            // Dates
            if (product.createdAt) {
                $('#createdAt').text(new Date(product.createdAt).toLocaleString());
            }
            if (product.updatedAt) {
                $('#updatedAt').text(new Date(product.updatedAt).toLocaleString());
            }
        }

        function setupEventHandlers() {
            $('#deleteBtn').on('click', function() {
                deleteProduct();
            });

            $('#toggleStatusBtn').on('click', function() {
                toggleProductStatus();
            });
        }

        function deleteProduct() {
            if (confirm(`Are you sure you want to delete "${currentProduct.name}"? This action cannot be undone.`)) {
                $.ajax({
                    url: `/api/products/${currentProduct.id}`,
                    method: 'DELETE',
                    success: function(response) {
                        if (response.success) {
                            showSuccess('Product deleted successfully');
                            setTimeout(function() {
                                window.location.href = '/ProductsWeb';
                            }, 1500);
                        } else {
                            showError('Failed to delete product: ' + response.message);
                        }
                    },
                    error: function() {
                        showError('Failed to delete product');
                    }
                });
            }
        }

        function toggleProductStatus() {
            const newStatus = !currentProduct.isActive;
            const action = newStatus ? 'activate' : 'deactivate';

            if (confirm(`Are you sure you want to ${action} "${currentProduct.name}"?`)) {
                const updatedProduct = { ...currentProduct };
                updatedProduct.isActive = newStatus;

                $.ajax({
                    url: `/api/products/${currentProduct.id}`,
                    method: 'PUT',
                    contentType: 'application/json',
                    data: JSON.stringify(updatedProduct),
                    success: function(response) {
                        if (response.success) {
                            currentProduct = response.data;
                            displayProduct(currentProduct);
                            showSuccess(`Product ${action}d successfully`);
                        } else {
                            showError(`Failed to ${action} product: ` + response.message);
                        }
                    },
                    error: function() {
                        showError(`Failed to ${action} product`);
                    }
                });
            }
        }

        function copyProductInfo() {
            const productInfo = `Product: ${currentProduct.name}\nID: ${currentProduct.id}\nPrice: $${currentProduct.price.toFixed(2)}\nCategory: ${currentProduct.category}\nStock: ${currentProduct.stockQuantity}\nStatus: ${currentProduct.isActive ? 'Active' : 'Inactive'}`;

            navigator.clipboard.writeText(productInfo).then(function() {
                showSuccess('Product information copied to clipboard');
            }, function() {
                showError('Failed to copy product information');
            });
        }

        function shareProduct() {
            const productUrl = window.location.href;
            const shareText = `Check out this product: ${currentProduct.name} - $${currentProduct.price.toFixed(2)}`;

            if (navigator.share) {
                navigator.share({
                    title: currentProduct.name,
                    text: shareText,
                    url: productUrl
                });
            } else {
                // Fallback - copy URL to clipboard
                navigator.clipboard.writeText(productUrl).then(function() {
                    showSuccess('Product URL copied to clipboard');
                }, function() {
                    showError('Failed to share product');
                });
            }
        }

        function showSuccess(message) {
            showAlert(message, 'success');
        }

        function showError(message) {
            showAlert(message, 'danger');
        }

        function showAlert(message, type) {
            const alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;

            $('main').prepend(alertHtml);
            $('html, body').animate({ scrollTop: 0 }, 300);

            setTimeout(function() {
                $('.alert').alert('close');
            }, 5000);
        }
    </script>
}
